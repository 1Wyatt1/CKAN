
// This file has been generated by the GUI designer. Do not modify.

public partial class MainWindow
{
	private global::Gtk.UIManager UIManager;

	private global::Gtk.Action FileAction;

	private global::Gtk.Action SettingsAction;

	private global::Gtk.Action HelpAction;

	private global::Gtk.Action ManageGameInstancesAction;

	private global::Gtk.Action OpenGameDirectoryAction;

	private global::Gtk.Action InstallFromCkanAction;

	private global::Gtk.Action ImportDonwloadedModsAction;

	private global::Gtk.Action SaveInstalledModListAction;

	private global::Gtk.Action ExportModpackAction;

	private global::Gtk.Action AuditRecommendationsAction;

	private global::Gtk.Action ExitCtrlQAction;

	private global::Gtk.Action newAction;

	private global::Gtk.Fixed fixed1;

	private global::Gtk.Button LaunchGame;

	private global::Gtk.Button Refresh;

	private global::Gtk.Button AddAvailableUpdates;

	private global::Gtk.Button ApplyChanges;

	private global::Gtk.MenuBar menubar1;

	protected virtual void Build()
	{
		global::Stetic.Gui.Initialize(this);
		// Widget MainWindow
		this.UIManager = new global::Gtk.UIManager();
		global::Gtk.ActionGroup w1 = new global::Gtk.ActionGroup("Default");
		this.FileAction = new global::Gtk.Action("FileAction", global::Mono.Unix.Catalog.GetString("File"), null, null);
		this.FileAction.ShortLabel = global::Mono.Unix.Catalog.GetString("File");
		w1.Add(this.FileAction, null);
		this.SettingsAction = new global::Gtk.Action("SettingsAction", global::Mono.Unix.Catalog.GetString("Settings"), null, null);
		this.SettingsAction.ShortLabel = global::Mono.Unix.Catalog.GetString("Settings");
		w1.Add(this.SettingsAction, null);
		this.HelpAction = new global::Gtk.Action("HelpAction", global::Mono.Unix.Catalog.GetString("Help"), null, null);
		this.HelpAction.ShortLabel = global::Mono.Unix.Catalog.GetString("Help");
		w1.Add(this.HelpAction, null);
		this.ManageGameInstancesAction = new global::Gtk.Action("ManageGameInstancesAction", global::Mono.Unix.Catalog.GetString("Manage Game Instances"), null, null);
		this.ManageGameInstancesAction.ShortLabel = global::Mono.Unix.Catalog.GetString("Manage Game Instances");
		w1.Add(this.ManageGameInstancesAction, null);
		this.OpenGameDirectoryAction = new global::Gtk.Action("OpenGameDirectoryAction", global::Mono.Unix.Catalog.GetString("Open Game Directory"), null, null);
		this.OpenGameDirectoryAction.ShortLabel = global::Mono.Unix.Catalog.GetString("Open Game Directory");
		w1.Add(this.OpenGameDirectoryAction, null);
		this.InstallFromCkanAction = new global::Gtk.Action("InstallFromCkanAction", global::Mono.Unix.Catalog.GetString("Install From .ckan"), null, null);
		this.InstallFromCkanAction.ShortLabel = global::Mono.Unix.Catalog.GetString("Install From .ckan");
		w1.Add(this.InstallFromCkanAction, null);
		this.ImportDonwloadedModsAction = new global::Gtk.Action("ImportDonwloadedModsAction", global::Mono.Unix.Catalog.GetString("Import Donwloaded Mods"), null, null);
		this.ImportDonwloadedModsAction.ShortLabel = global::Mono.Unix.Catalog.GetString("Import Donwloaded Mods");
		w1.Add(this.ImportDonwloadedModsAction, null);
		this.SaveInstalledModListAction = new global::Gtk.Action("SaveInstalledModListAction", global::Mono.Unix.Catalog.GetString("Save Installed Mod List"), null, null);
		this.SaveInstalledModListAction.ShortLabel = global::Mono.Unix.Catalog.GetString("Save Installed Mod List");
		w1.Add(this.SaveInstalledModListAction, null);
		this.ExportModpackAction = new global::Gtk.Action("ExportModpackAction", global::Mono.Unix.Catalog.GetString("Export Modpack"), null, null);
		this.ExportModpackAction.ShortLabel = global::Mono.Unix.Catalog.GetString("Export Modpack");
		w1.Add(this.ExportModpackAction, null);
		this.AuditRecommendationsAction = new global::Gtk.Action("AuditRecommendationsAction", global::Mono.Unix.Catalog.GetString("Audit Recommendations"), null, null);
		this.AuditRecommendationsAction.ShortLabel = global::Mono.Unix.Catalog.GetString("Audit Recommendations");
		w1.Add(this.AuditRecommendationsAction, null);
		this.ExitCtrlQAction = new global::Gtk.Action("ExitCtrlQAction", global::Mono.Unix.Catalog.GetString("Exit                                   Ctrl+Q"), null, null);
		this.ExitCtrlQAction.ShortLabel = global::Mono.Unix.Catalog.GetString("Exit                                   Ctrl+Q");
		w1.Add(this.ExitCtrlQAction, null);
		this.newAction = new global::Gtk.Action("newAction", null, null, "gtk-new");
		w1.Add(this.newAction, null);
		this.UIManager.InsertActionGroup(w1, 0);
		this.AddAccelGroup(this.UIManager.AccelGroup);
		this.Name = "MainWindow";
		this.Title = global::Mono.Unix.Catalog.GetString("CKAN");
		this.WindowPosition = ((global::Gtk.WindowPosition)(4));
		this.DefaultWidth = 600;
		this.DefaultHeight = 400;
		// Container child MainWindow.Gtk.Container+ContainerChild
		this.fixed1 = new global::Gtk.Fixed();
		this.fixed1.Name = "fixed1";
		this.fixed1.HasWindow = false;
		// Container child fixed1.Gtk.Fixed+FixedChild
		this.LaunchGame = new global::Gtk.Button();
		this.LaunchGame.CanFocus = true;
		this.LaunchGame.Name = "LaunchGame";
		this.LaunchGame.UseUnderline = true;
		this.LaunchGame.Label = global::Mono.Unix.Catalog.GetString("Launch Game");
		this.fixed1.Add(this.LaunchGame);
		global::Gtk.Fixed.FixedChild w2 = ((global::Gtk.Fixed.FixedChild)(this.fixed1[this.LaunchGame]));
		w2.Y = 25;
		// Container child fixed1.Gtk.Fixed+FixedChild
		this.Refresh = new global::Gtk.Button();
		this.Refresh.CanFocus = true;
		this.Refresh.Name = "Refresh";
		this.Refresh.UseUnderline = true;
		this.Refresh.Label = global::Mono.Unix.Catalog.GetString("Refresh");
		this.fixed1.Add(this.Refresh);
		global::Gtk.Fixed.FixedChild w3 = ((global::Gtk.Fixed.FixedChild)(this.fixed1[this.Refresh]));
		w3.X = 101;
		w3.Y = 25;
		// Container child fixed1.Gtk.Fixed+FixedChild
		this.AddAvailableUpdates = new global::Gtk.Button();
		this.AddAvailableUpdates.CanFocus = true;
		this.AddAvailableUpdates.Name = "AddAvailableUpdates";
		this.AddAvailableUpdates.UseUnderline = true;
		this.AddAvailableUpdates.Label = global::Mono.Unix.Catalog.GetString("Add Available Updates");
		this.fixed1.Add(this.AddAvailableUpdates);
		global::Gtk.Fixed.FixedChild w4 = ((global::Gtk.Fixed.FixedChild)(this.fixed1[this.AddAvailableUpdates]));
		w4.X = 165;
		w4.Y = 25;
		// Container child fixed1.Gtk.Fixed+FixedChild
		this.ApplyChanges = new global::Gtk.Button();
		this.ApplyChanges.CanFocus = true;
		this.ApplyChanges.Name = "ApplyChanges";
		this.ApplyChanges.UseUnderline = true;
		this.ApplyChanges.Label = global::Mono.Unix.Catalog.GetString("Apply Changes");
		this.fixed1.Add(this.ApplyChanges);
		global::Gtk.Fixed.FixedChild w5 = ((global::Gtk.Fixed.FixedChild)(this.fixed1[this.ApplyChanges]));
		w5.X = 330;
		w5.Y = 25;
		// Container child fixed1.Gtk.Fixed+FixedChild
		this.UIManager.AddUiFromString(@"<ui><menubar name='menubar1'><menu name='FileAction' action='FileAction'><menuitem name='ManageGameInstancesAction' action='ManageGameInstancesAction'/><menuitem name='OpenGameDirectoryAction' action='OpenGameDirectoryAction'/><menuitem name='InstallFromCkanAction' action='InstallFromCkanAction'/><menuitem name='ImportDonwloadedModsAction' action='ImportDonwloadedModsAction'/><menuitem name='SaveInstalledModListAction' action='SaveInstalledModListAction'/><menuitem name='ExportModpackAction' action='ExportModpackAction'/><menuitem name='AuditRecommendationsAction' action='AuditRecommendationsAction'/><menuitem name='ExitCtrlQAction' action='ExitCtrlQAction'/></menu><menu name='SettingsAction' action='SettingsAction'/><menu name='HelpAction' action='HelpAction'/></menubar></ui>");
		this.menubar1 = ((global::Gtk.MenuBar)(this.UIManager.GetWidget("/menubar1")));
		this.menubar1.Name = "menubar1";
		this.fixed1.Add(this.menubar1);
		this.Add(this.fixed1);
		if ((this.Child != null))
		{
			this.Child.ShowAll();
		}
		this.Show();
		this.DeleteEvent += new global::Gtk.DeleteEventHandler(this.OnDeleteEvent);
		this.ManageGameInstancesAction.Activated += new global::System.EventHandler(this.OnManageGameInstancesActionActivated);
		this.OpenGameDirectoryAction.Activated += new global::System.EventHandler(this.OnOpenGameDirectoryActionActivated);
		this.InstallFromCkanAction.Activated += new global::System.EventHandler(this.OnInstallFromCkanActionActivated);
		this.ExitCtrlQAction.Activated += new global::System.EventHandler(this.OnExitCtrlQActionActivated);
		this.LaunchGame.Clicked += new global::System.EventHandler(this.OnLaunchGameClicked);
		this.Refresh.Clicked += new global::System.EventHandler(this.OnRefreshClicked);
		this.AddAvailableUpdates.Clicked += new global::System.EventHandler(this.OnAddAvailableUpdatesClicked);
		this.ApplyChanges.Clicked += new global::System.EventHandler(this.OnApplyChangesClicked);
	}
}
